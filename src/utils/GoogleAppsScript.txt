
/**
 * Google Apps Script to handle form submissions and write to Google Sheets
 * 
 * To use this:
 * 1. Go to https://script.google.com
 * 2. Create a new project
 * 3. Paste this code
 * 4. Deploy as a web app:
 *    - Click Deploy > New deployment
 *    - Select type: Web app
 *    - Set "Execute as" to "Me" 
 *    - Set "Who has access" to "Anyone"
 *    - Click Deploy
 * 5. Copy the Web App URL and use it in your React app
 */

// The ID of your Google Sheet
const SHEET_ID = '1Yvs376HHayBk7cL-bXgpVS-FsVbKNaDynN0WblTGEbs';

// Process incoming POST requests
function doPost(e) {
  try {
    // Parse the JSON data from the request
    const data = JSON.parse(e.postData.contents);
    
    // Basic validation
    if (!data.name || !data.email || !data.message) {
      return ContentService.createTextOutput(JSON.stringify({
        status: 'error',
        message: 'Missing required fields'
      })).setMimeType(ContentService.MimeType.JSON);
    }
    
    // Get the Google Sheet
    const sheet = SpreadsheetApp.openById(SHEET_ID).getActiveSheet();
    
    // Add a timestamp
    const timestamp = new Date().toISOString();
    
    // Append the data to the sheet
    sheet.appendRow([
      timestamp, 
      data.name, 
      data.email, 
      data.message
    ]);
    
    // Return success response
    return ContentService.createTextOutput(JSON.stringify({
      status: 'success',
      message: 'Data successfully saved to Google Sheets'
    })).setMimeType(ContentService.MimeType.JSON);
    
  } catch (error) {
    // Return error response
    return ContentService.createTextOutput(JSON.stringify({
      status: 'error',
      message: error.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  }
}

// Handle GET requests (for testing)
function doGet() {
  return ContentService.createTextOutput(JSON.stringify({
    status: 'success',
    message: 'The Google Apps Script is working!'
  })).setMimeType(ContentService.MimeType.JSON);
}
